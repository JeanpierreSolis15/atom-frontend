name: Deploy to Firebase Atom WEB

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types: [closed]

jobs:
  test-and-deploy:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Install dependencies
        run: |
          rm -f package-lock.json
          npm install --legacy-peer-deps

      - name: Run linting
        run: npm run lint

      - name: Run tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless --code-coverage

      - name: Build application
        run: npm run build:prod

      - name: Verify build output
        run: |
          echo "Checking dist directory..."
          ls -la dist/
          echo ""
          echo "Checking build directory..."
          if [ ! -d "dist/atom-challenge-fe-template" ]; then
            echo "Build directory not found!"
            exit 1
          fi
          echo "Build directory exists"
          ls -la dist/atom-challenge-fe-template/
          echo ""
          echo "Checking browser directory..."
          if [ ! -d "dist/atom-challenge-fe-template/browser" ]; then
            echo "Browser directory not found!"
            exit 1
          fi
          echo "Browser directory exists"
          ls -la dist/atom-challenge-fe-template/browser/
          echo ""
          echo "Checking for index.html..."
          if [ ! -f "dist/atom-challenge-fe-template/browser/index.html" ]; then
            echo "index.html not found!"
            echo "Files in browser directory:"
            find dist/atom-challenge-fe-template/browser -type f -name "*.html"
            exit 1
          fi
          echo "index.html found!"
          echo "File size: $(ls -lh dist/atom-challenge-fe-template/browser/index.html | awk '{print $5}')"

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Verify Firebase Configuration
        run: |
          if [ ! -n "$FIREBASE_SERVICE_ACCOUNT" ]; then
            echo "FIREBASE_SERVICE_ACCOUNT secret is empty"
            exit 1
          fi
          if [ ! -n "$FIREBASE_PROJECT_ID" ]; then
            echo "FIREBASE_PROJECT_ID secret is empty"
            exit 1
          fi
          echo "Firebase secrets configured"
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Deploy to Firebase
        run: |
          echo "$FIREBASE_SERVICE_ACCOUNT" > $HOME/service-account.json
          export GOOGLE_APPLICATION_CREDENTIALS=$HOME/service-account.json
          firebase deploy --only hosting --project $FIREBASE_PROJECT_ID
          rm -f $HOME/service-account.json
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Deploy success
        if: success()
        run: |
          echo "¡Despliegue exitoso!"
          echo "URL: https://${{ secrets.FIREBASE_PROJECT_ID }}.web.app"
          echo "Fecha: $(date)"

      - name: Deploy failure
        if: failure()
        run: |
          echo "Error en el despliegue"
          echo "Revisa los logs anteriores para más detalles"
